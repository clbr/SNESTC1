;
; File generated by cc65 v 2.18 - Git 2f3955d
;
	.fopt		compiler,"cc65 v 2.18 - Git 2f3955d"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_decomp_commonbyte

_in = ptr2
_out = ptr3
_orig = ptr4
_cur = tmp2
_curbit = tmp4
_bits = regsave

; ---------------------------------------------------------------
; u8 decomp_commonbyte(const u8 *in, u8 *out);
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_decomp_commonbyte: near

	sta	_out
	sty	_out+1

	jsr	popax
	sta	_in
	sta	_orig
	stx	_in+1
	stx	_orig+1
;
; orig = in;
;
;
; cur = *in++;
;
	lda	(_in)
	sta	_cur
	inc	_in
	bne	:+
	inc	_in+1
:
;
; memcpy(&bits, in, 4);
;
	lda	(_in)
	sta	_bits
	ldy	#1
	lda	(_in),y
	sta	_bits+1
	iny
	lda	(_in),y
	sta	_bits+2
	iny
	lda	(_in),y
	sta	_bits+3
;
; in += 4;
;
	lda     #$04
	clc
	adc     _in
	sta     _in
	bcc     L000E
	inc     _in+1
;
; for (j = 0; j < 4; j++) {
;
L000E:	ldy	#0
L0030:
	cpy     #$04
	bcs     L0010
;
; curbit = bits[j];
;
	lda     _bits,y
	sta     _curbit
;
; for (i = 0; i < 8; i++) {
;
	ldx	#0
L0031:
	cpx     #$08
	bcs     L0033
;
; if (curbit & 1)
;
	lda     _curbit
	and     #$01
	beq     L0023
;
; *out++ = cur;
;
	lda	_cur
	sta	(_out)
	inc	_out
	bne	:+
	inc	_out+1
:
;
; else
;
	bra     L0032
;
; *out++ = *in++;
;
L0023:
	lda	(_in)
	sta	(_out)
	inc	_in
	bne	:+
	inc	_in+1
:
	inc	_out
	bne	:+
	inc	_out+1
:
;
; curbit >>= 1;
;
L0032:
	lsr     _curbit
;
; for (i = 0; i < 8; i++) {
;
	inx
	bra     L0031
;
; for (j = 0; j < 4; j++) {
;
L0033:	iny
	bra     L0030
;
; return in - orig;
;
L0010:	lda     _in
	sec
	sbc     _orig
	ldx     #$00

	rts

.endproc
