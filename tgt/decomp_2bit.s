;
; File generated by cc65 v 2.18 - Git 2f3955d
;
	.fopt		compiler,"cc65 v 2.18 - Git 2f3955d"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_decomp_2bit
	.importzp	passin, passout

_in = passin
_out = passout
_used = ptr1
_val = ptr4
_tab = regsave
_i = tmp1

; ---------------------------------------------------------------
; u8 decomp_2bit(const u8 *in, u8 *out);
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_decomp_2bit: near

;
; memcpy(&used, in, 2);
;
	lda	(_in)
	sta	_used
	ldy	#1
	lda	(_in),y
	sta	_used+1
;
; in += 2;
;
	lda     #$02
	clc
	adc     _in
	sta     _in
	bcc     L0009
	inc     _in+1
;
; cur = 0;
;
L0009:	ldx	#0
;
; for (i = 0; i < 16; i++) {
; if (used & (1 << i))
; tab[cur++] = i;
;
	lda	_used
.repeat 8, I
	bit	#1 << I
	beq	:+
		lda #I
		sta _tab,x
		inx
		lda	_used
	:
.endrepeat
	lda	_used+1
.repeat 8, I
	bit	#1 << I
	beq	:+
		lda #I+8
		sta _tab,x
		inx
		lda	_used+1
	:
.endrepeat

;
; for (i = 0; i < 16; i += 2) {
;
L003D:	stz	_i
L003B:
	lda     _i
	cmp     #$8
	bcs     L003F
;
; memcpy(&val, in, 2);
;
	lda	(_in)
	sta	_val
	ldy	#1
	lda	(_in),y
	sta	_val+1
;
; in += 2;
;
	lda     #$02
	clc
	adc     _in
	sta     _in
	bcc     L0029
	inc     _in+1
;
; for (j = 0; j < 16; j += 2) {
;
L0029:	ldx	#0
L003A:
	cpx     #$8
	bcs     L003E
;
; *out++ = tab[val & 3];
;
	lda	_val
	and	#3
	tay
	lda	_tab,y
	sta	(_out)
	inc	_out
	bne	@noinc
	inc	_out+1
@noinc:
;
; val >>= 2;
;
	lsr	_val+1
	ror	_val
	lsr	_val+1
	ror	_val
;
; for (j = 0; j < 16; j += 2) {
;
	inx
	bra     L003A
;
; for (i = 0; i < 16; i += 2) {
;
L003E:	inc	_i
	bra     L003B
;
; return 18;
;
L003F:	lda     #$12
	ldx	#0

	rts

.endproc

