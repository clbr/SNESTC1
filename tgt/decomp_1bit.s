;
; File generated by cc65 v 2.18 - Git 2f3955d
;
	.fopt		compiler,"cc65 v 2.18 - Git 2f3955d"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_decomp_1bit

.segment	"BSS"

_in = ptr2
_out = ptr3
_flood = ptr4
_other = ptr4+1
_i = tmp1
_val = tmp3

; ---------------------------------------------------------------
; u8 decomp_1bit(const u8 *in, u8 *out);
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_decomp_1bit: near

	sta	_out
	sty	_out+1

	jsr	popax
	sta	_in
	stx	_in+1
;
; flood = *in & 15;
;
	lda     (_in)
	tax
	and     #$0F
	sta     _flood
;
; other = *in >> 4;
;
	txa
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	sta     _other
;
; in++;
;
	inc	_in
	bne     L0007
	inc	_in+1
L0007:
;
; for (i = 0; i < 8; i++) {
;
	ldy	#0
L0029:	cpy     #$08
	bcs     L002C
;
; val = in[i];
;
	lda     (_in),y
	sta     _val
;
; for (j = 0; j < 8; j++) {
;
	ldx	#0
L002A:	cpx     #$08
	bcs     L002B
;
; if (val & 1)
;
	lda     _val
	and     #$01
	beq     L001B
;
; *out++ = other;
;
	lda	_other
;
; else
;
	bra     L002D
;
; *out++ = flood;
;
L001B:	lda     _flood
L002D:	sta     (_out)
	inc	_out
	bne	@noinc
	inc	_out+1
@noinc:
;
; val >>= 1;
;
	lsr     _val
;
; for (j = 0; j < 8; j++) {
;
	inx
	bra     L002A
;
; for (i = 0; i < 8; i++) {
;
L002B:	iny
	bra     L0029
;
; return 9;
;
L002C:	lda     #$09
	ldx	#0
	rts

.endproc

